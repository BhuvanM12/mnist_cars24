# -*- coding: utf-8 -*-
"""mnist_24_task.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1I3vZtcJ03BgOwjfiOibYK1H0vBmSYt-d
"""

#Importing necessory libraries
import tensorflow as tf
from tensorflow.keras.datasets import mnist
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense, Flatten
from tensorflow.keras.utils import to_categorical
import matplotlib.pyplot as plt
from tensorflow.keras.optimizers import Adam
import tensorflow_datasets as tfds

# Load dataset
(x_train, y_train), (x_test, y_test) = mnist.load_data()

# Normalize the data to 0-1 range
x_train = x_train / 255.0
x_test = x_test / 255.0

# Convert labels to one-hot encoding
y_train = to_categorical(y_train)
y_test = to_categorical(y_test)

# Plot the first five images in the dataset
for i in x_train[:6]:
  plt.imshow(i, cmap='gray')
  plt.title(f'Label: {y_train[0].argmax()}')
  plt.show()

#define model  architecture
model = Sequential([
    Flatten(input_shape=(28, 28)),  # Flatten the input
    Dense(128, activation='relu'),  # First hidden layer
    Dense(10, activation='softmax') # Output layer
])
#Compile the model
model.compile(optimizer=Adam(),
              loss='categorical_crossentropy',
              metrics=['accuracy'])

#Model training
history = model.fit(x_train, y_train, epochs=5, validation_split=0.2)

test_loss, test_acc = model.evaluate(x_test, y_test)
print(f'Test accuracy: {test_acc}')

model.save('mnist_model.h5')